src --> .java 
build --> .class 

webcontent/webapp -->
			html audio v css js images **
			
WEB-INF/
	web.xml [ configuration ] 
			[ dd - deployment descriptor ] 
			[ servlet configuration ] 	
lib/
	.jar 
	
MVC design 
	model -> db .container[bean] 
	view  -> user 
	controller --> logic 

src -> com 	
		controller --> logic 
		dao --> data access object --> db query --> insert update delete select 
		bean --> storage container class --> temp data hold 
		util --> 


index.html 
	Welcome to my site!! 

how to create index.html ? 

right click on webapp or webcontent -> click on new ->
type html -> now type index.html -> finish 


TASK : 

	Login.html ==> Submit ==> LoginServlet => email password print 
	index.html -> Add.html =>
		No.1  [  ] 10
		No.2  [  ] 20
	
			[submit] 
		
	AddServlet ==> XXX => 10 + 20 = 30 




--------------------------------------------------

1) add gender hobby city and singup.html
2) add validation in addition.html [ required and format check ] 

--------------------------------------------
open mysql commandline 
input your password 

one time -> create database 
create database advjavaavengers; 

user advjavaavengers; 

create table users (
	userId int primary key auto_increment, 
	firstName varchar(30),
	email  varchar(30),
	password varchar(30)
);

----------------------------------


which interface is used to hold connection of db?

Connection con  =  XXX 


______ResultSet____________ is used to store output of select * from users ? 



__executeUpdate()_________ is used to execute insert query ?



____ResultSet__________ is the return type of executeQuery? 


___SqlException_________ exception thrown by JDBC api ?



___int________ is the return type of executeUpdate?


? is know as _____place holder___


JIT ? just in time 
class loader 
why java is object oriented ?

how ArrayList works internally ?
how HashMap works internally ?

What is HashTable and difference between HashTable and HashMap? 

-----------------------------------------------------------------
expense manager :- 

user signup 
user login 
user expense manage 
	- add expense
	- list expense 
	- delete expense 
	- modify expense 
user signup
	firstname email password gender 	

-----------------------------------------------------------------



adv java -- tomcat -- link -- eclipse 

dynamic web project -- folder structure

servlet-api.jar --> external jar 

jsp -> input -> servlet --> validation -> response 
----------------------------------------------------------
 
LoginServlet --> 1 instance 

thread 

1 login  
2 login 
3 login 


init() 1  
+

service() N time - request  


destroy() 1  
--------------------------------------------------------
1 request -> LoginServlet --> in memory 
servlet lifecycle 
1) load class 
2) create instance 
3) init 
4) service
5) destroy 

--------------------------------------------------------
jsp lifecylce 

jsp -> java servlet pages /
		java server pages 
		

.jsp 
	
done by servlet container --> server --> apachetomcat 

		
1) translation .jsp --->  .java 
2) compilation .java --> .class 
3) load class 
4) create instance 
5) jspInit 
6) _jspService
7) jspDestroy 
--------------------------------------------------------
listener 
	listen events --> backend 
	server start --->welcome 
	server shutdown --- goodbye 
	
1) implements ListenerXXXX
2) override method 
3) web.xml 
--------------------------------------------------------
welcome Tejas 

to store the data for user
 2 storages 

1) cookie -- client side -- browser 
2) session -- server side -- server 


session => creditCard otp cvv 	
cookie  => name , address , 	


session is a storage which use server's memory 
cookie is also a storage in which we can store user's info 
and it use browser's memory. 

duration ? cookie session ? 
when destroy ?? 

cookie --> 1 year --> ?  
session --> server shut down 

facebook --> infinite ---> logout --> session time out 
-------------------------------------------------------		
		
		
		
		
		
		
		
		
		
		
		
		
		










